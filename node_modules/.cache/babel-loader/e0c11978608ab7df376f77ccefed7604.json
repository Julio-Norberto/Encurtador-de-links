{"ast":null,"code":"// Buscando links\nexport async function getLinksSave(key) {\n  const myLinks = await localStorage.getItem(key);\n  let linksSaves = JSON.parse(myLinks) || [];\n  return linksSaves;\n} // Salvando links no local storage\n\nexport async function saveLink(key, newLink) {\n  let linksStored = await getLinksSave(key); // função para não salvar dois itens iguais\n\n  const hasLink = linksStored.some(link => link.id === newLink.id);\n\n  if (hasLink) {\n    console.log('Esse link já existe na sua lista');\n    return;\n  } // adicionar link na lista caso não esteja duplicado\n\n\n  linksStored.push(newLink);\n  await localStorage.setItem(key, JSON.stringify(linksStored));\n  console.log('Link salvo com sucesso!');\n} // deletar links","map":{"version":3,"sources":["/home/julio/Documentos/GitHub/Encurtador-de-links/src/services/storelinks.js"],"names":["getLinksSave","key","myLinks","localStorage","getItem","linksSaves","JSON","parse","saveLink","newLink","linksStored","hasLink","some","link","id","console","log","push","setItem","stringify"],"mappings":"AAAA;AACA,OAAO,eAAeA,YAAf,CAA4BC,GAA5B,EAAgC;AACnC,QAAMC,OAAO,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAtB;AAEA,MAAII,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAX,KAAuB,EAAxC;AAEA,SAAOG,UAAP;AACH,C,CAED;;AAEA,OAAO,eAAeG,QAAf,CAAwBP,GAAxB,EAA6BQ,OAA7B,EAAqC;AACxC,MAAIC,WAAW,GAAG,MAAMV,YAAY,CAACC,GAAD,CAApC,CADwC,CAGxC;;AACA,QAAMU,OAAO,GAAGD,WAAW,CAACE,IAAZ,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA9C,CAAhB;;AAEA,MAAGH,OAAH,EAAW;AACPI,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA;AACH,GATuC,CAWxC;;;AACAN,EAAAA,WAAW,CAACO,IAAZ,CAAiBR,OAAjB;AACA,QAAMN,YAAY,CAACe,OAAb,CAAqBjB,GAArB,EAA0BK,IAAI,CAACa,SAAL,CAAeT,WAAf,CAA1B,CAAN;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,C,CAED","sourcesContent":["// Buscando links\nexport async function getLinksSave(key){\n    const myLinks = await localStorage.getItem(key)\n\n    let linksSaves = JSON.parse(myLinks) || [];\n\n    return linksSaves;\n}\n\n// Salvando links no local storage\n\nexport async function saveLink(key, newLink){\n    let linksStored = await getLinksSave(key);\n\n    // função para não salvar dois itens iguais\n    const hasLink = linksStored.some( link => link.id === newLink.id)\n\n    if(hasLink){\n        console.log('Esse link já existe na sua lista')\n        return;\n    }\n\n    // adicionar link na lista caso não esteja duplicado\n    linksStored.push(newLink)\n    await localStorage.setItem(key, JSON.stringify(linksStored))\n    console.log('Link salvo com sucesso!')\n}\n\n// deletar links"]},"metadata":{},"sourceType":"module"}